<?php
/**
 * This file is part of the <name> project.
 *
 * (c) SYMBIO
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Symbio\OrangeGate\PageBundle\Entity;

use Sonata\PageBundle\Entity\BasePage as BasePage;
use Doctrine\ORM\Mapping as ORM;
use Sonata\PageBundle\Model\PageBlockInterface;
use Sonata\PageBundle\Model\PageInterface;
use Sonata\PageBundle\Model\SiteInterface;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author SYMBIO
 *
 * @ORM\Entity
 * @ORM\Table(name="page__page")
 */
class Page extends BasePage
{

    /**
     * @var integer $id
     * @ORM\Column(type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    protected $children;

    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    protected $blocks;

    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    protected $sources;

    /**
     * @var \Symbio\OrangeGate\PageBundle\Entity\Site
     */
    protected $site;

    /**
     * @var \Symbio\OrangeGate\PageBundle\Entity\Page
     */
    protected $parent;

    /**
     * @var \Symbio\OrangeGate\PageBundle\Entity\Page
     */
    protected $target;

    /**
     * Constructor
     */
    public function __construct()
    {
        parent::__construct();

        $this->children = new \Doctrine\Common\Collections\ArrayCollection();
        $this->blocks = new \Doctrine\Common\Collections\ArrayCollection();
        $this->sources = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Get id
     *
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Add children
     *
     * @param \Symbio\OrangeGate\PageBundle\Entity\Page $children
     * @return Page
     */
    public function addChild(PageInterface $children)
    {
        $this->children[] = $children;

        return $this;
    }

    /**
     * Remove children
     *
     * @param \Symbio\OrangeGate\PageBundle\Entity\Page $children
     */
    public function removeChild(PageInterface $children)
    {
        $this->children->removeElement($children);
    }

    /**
     * Get children
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getChildren()
    {
        return $this->children;
    }

    /**
     * Add blocks
     *
     * @param \Symbio\OrangeGate\PageBundle\Entity\Block $blocks
     * @return Page
     */
    public function addBlock(PageBlockInterface $blocks)
    {
        $this->blocks[] = $blocks;

        return $this;
    }

    /**
     * Remove blocks
     *
     * @param \Symbio\OrangeGate\PageBundle\Entity\Block $blocks
     */
    public function removeBlock(PageBlockInterface $blocks)
    {
        $this->blocks->removeElement($blocks);
    }

    /**
     * Get blocks
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getBlocks()
    {
        return $this->blocks;
    }

    /**
     * Add sources
     *
     * @param \Symbio\OrangeGate\PageBundle\Entity\Page $sources
     * @return Page
     */
    public function addSource(PageInterface $sources)
    {
        $this->sources[] = $sources;

        return $this;
    }

    /**
     * Remove sources
     *
     * @param \Symbio\OrangeGate\PageBundle\Entity\Page $sources
     */
    public function removeSource(PageInterface $sources)
    {
        $this->sources->removeElement($sources);
    }

    /**
     * Get sources
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getSources()
    {
        return $this->sources;
    }

    /**
     * Set site
     *
     * @param \Symbio\OrangeGate\PageBundle\Entity\Site $site
     * @return Page
     */
    public function setSite(SiteInterface $site = null)
    {
        $this->site = $site;

        return $this;
    }

    /**
     * Get site
     *
     * @return \Symbio\OrangeGate\PageBundle\Entity\Site
     */
    public function getSite()
    {
        return $this->site;
    }

    /**
     * Set parent
     *
     * @param \Symbio\OrangeGate\PageBundle\Entity\Page $parent
     * @return Page
     */
    public function setParent(PageInterface $parent = null)
    {
        $this->parent = $parent;

        return $this;
    }

    /**
     * Get parent
     *
     * @return \Symbio\OrangeGate\PageBundle\Entity\Page
     */
    public function getParent($level = -1)
    {
        return $this->parent;
    }

    /**
     * Set target
     *
     * @param \Symbio\OrangeGate\PageBundle\Entity\Page $target
     * @return Page
     */
    public function setTarget(PageInterface $target = null)
    {
        $this->target = $target;

        return $this;
    }

    /**
     * Get target
     *
     * @return \Symbio\OrangeGate\PageBundle\Entity\Page
     */
    public function getTarget()
    {
        return $this->target;
    }
}
